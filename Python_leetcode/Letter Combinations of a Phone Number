class Solution:
    def letterCombinations(self, digits: str) -> List[str]:
        if not digits:
            return []
        keypad = {"2": "abc","3": "def","4": "ghi","5": "jkl","6": "mno","7": "pqrs","8": "tuv","9": "wxyz"}
        def permute(index, path):
            if index == len(digits):
                combinations.append(''.join(path))
                return
            current_digit = digits[index]
            letters = keypad.get(current_digit,'')
            for letter in letters:
                path.append(letter)
                permute(index + 1, path)
                path.pop()
        
        combinations = []
        permute(0,[])
        return combinations
